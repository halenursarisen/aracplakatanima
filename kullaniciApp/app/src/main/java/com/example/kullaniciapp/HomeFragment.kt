package com.example.kullaniciapp

import android.os.Bundle
import android.os.Handler
import android.os.Looper
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.view.animation.AnimationUtils
import android.widget.Button
import android.widget.TextView
import android.widget.Toast
import androidx.fragment.app.Fragment
import androidx.viewpager2.widget.ViewPager2
import com.google.firebase.auth.FirebaseAuth
import com.google.firebase.firestore.FirebaseFirestore
import com.tbuonomo.viewpagerdotsindicator.WormDotsIndicator

class HomeFragment : Fragment() {

    private lateinit var textGecenSure: TextView
    private lateinit var textKullaniciAdSoyad: TextView
    private var startTimeMillis: Long = 0L
    private val handler = Handler(Looper.getMainLooper())

    private var currentPage = 0
    private val autoScrollHandler = Handler(Looper.getMainLooper())
    private lateinit var autoScrollRunnable: Runnable

    private val timerRunnable = object : Runnable {
        override fun run() {
            val elapsedMillis = System.currentTimeMillis() - startTimeMillis
            val hours = (elapsedMillis / (1000 * 60 * 60)) % 24
            val minutes = (elapsedMillis / (1000 * 60)) % 60
            val seconds = (elapsedMillis / 1000) % 60
            val timeFormatted = String.format("%02d:%02d:%02d", hours, minutes, seconds)
            textGecenSure.text = "Ge√ßen park s√ºresi: $timeFormatted"
            handler.postDelayed(this, 1000)
        }
    }

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        val view = inflater.inflate(R.layout.fragment_home, container, false)

        // üë§ Kullanƒ±cƒ± adƒ±
        textKullaniciAdSoyad = view.findViewById(R.id.textKullaniciAdSoyad)
        val userEmail = FirebaseAuth.getInstance().currentUser?.email
        val displayName = userEmail ?: "Kullanƒ±cƒ±"
        textKullaniciAdSoyad.text = "Ho≈ü geldin, $displayName üëã"

        // üîî Animasyon
        val textAnim = view.findViewById<TextView>(R.id.textAnimUyari)
        val anim = AnimationUtils.loadAnimation(requireContext(), R.anim.scroll_text)
        textAnim.startAnimation(anim)

        // ‚è± Ge√ßen s√ºre
        textGecenSure = view.findViewById(R.id.textGecenSure)

        // üîÑ ViewPager2 ve Dots
        val viewPager = view.findViewById<ViewPager2>(R.id.infoViewPager)
        val dotsIndicator = view.findViewById<WormDotsIndicator>(R.id.dotsIndicator)

        val infoCards = listOf(
            InfoCard("Otopark Durumu", "A√ßƒ±k ‚Äì Giri≈ü serbest", android.R.drawable.ic_dialog_info),
            InfoCard("Doluluk", "18/30 dolu (A1-A10 dolu)", android.R.drawable.ic_menu_agenda),
            InfoCard("Kamera Durumu", "Kamera sistemi aktif", android.R.drawable.ic_menu_camera),
            InfoCard("Giri≈ü/√áƒ±kƒ±≈ü", "Giri≈ü a√ßƒ±k ‚Äì √áƒ±kƒ±≈ü kapalƒ±", android.R.drawable.ic_menu_directions)
        )

        viewPager.adapter = InfoCardAdapter(infoCards)
        dotsIndicator.attachTo(viewPager)

        // ‚úÖ Otomatik scroll ba≈ülat
        autoScrollRunnable = object : Runnable {
            override fun run() {
                val itemCount = viewPager.adapter?.itemCount ?: 0
                if (itemCount > 0) {
                    currentPage = (currentPage + 1) % itemCount
                    viewPager.setCurrentItem(currentPage, true)
                    autoScrollHandler.postDelayed(this, 2000)
                }
            }
        }
        autoScrollHandler.postDelayed(autoScrollRunnable, 2000)

        // üì¶ Firestore'dan kullanƒ±cƒ± verisini √ßek
        val uid = FirebaseAuth.getInstance().currentUser?.uid
        if (uid != null) {
            val db = FirebaseFirestore.getInstance()
            val userRef = db.collection("users").document(uid)

            userRef.get().addOnSuccessListener { document ->
                if (document != null && document.exists()) {
                    view.findViewById<TextView>(R.id.textPlaka).text =
                        "Plaka: ${document.getString("plaka") ?: "-"}"

                    view.findViewById<TextView>(R.id.textGirisSaati).text =
                        "Giri≈ü Saati: ${document.getString("giris_saati") ?: "-"}"

                    view.findViewById<TextView>(R.id.textParkAlani).text =
                        "Park Alanƒ±: ${document.getString("park_alani") ?: "-"}"

                    view.findViewById<TextView>(R.id.textUcret).text =
                        "Toplam √úcret: ${document.getString("toplam_ucret") ?: "-"}"

                    view.findViewById<TextView>(R.id.textTarife).text =
                        "Tarife: ƒ∞lk 30 dk √ºcretsiz, her ek saat 10‚Ç∫"

                    view.findViewById<TextView>(R.id.textGecmisOdeme).text =
                        "Ge√ßmi≈ü √ñdeme: ${document.getString("gecmis_odeme") ?: "-"}"
                }
            }.addOnFailureListener {
                Toast.makeText(requireContext(), "Veri alƒ±namadƒ±!", Toast.LENGTH_SHORT).show()
            }
        }

        // üí∏ √ñdeme
        val buttonOde = view.findViewById<Button>(R.id.buttonOde)
        buttonOde.setOnClickListener {
            Toast.makeText(requireContext(), "√ñdeme i≈ülemi ba≈ülatƒ±ldƒ±.", Toast.LENGTH_SHORT).show()
        }

        // üìÜ Rezervasyon
        val buttonRezervasyon = view.findViewById<Button>(R.id.buttonRezervasyon)
        buttonRezervasyon.setOnClickListener {
            Toast.makeText(requireContext(), "Rezervasyon ekranƒ± yakƒ±nda!", Toast.LENGTH_SHORT).show()
        }

        // Saya√ß ba≈ülat
        startTimeMillis = System.currentTimeMillis() - (12 * 60 * 1000)
        handler.post(timerRunnable)

        return view
    }

    override fun onDestroyView() {
        super.onDestroyView()
        handler.removeCallbacks(timerRunnable)
        autoScrollHandler.removeCallbacks(autoScrollRunnable)
    }
}
